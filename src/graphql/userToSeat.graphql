fragment userToSeatFields on UserToSeat {
  _id
  createdAt
  seat {
    _id
  }
  user {
    ...userFields
  }
}

query FindUserToSeats($seat: ID, $user: ID, $date: String) {
  list: findUserToSeats(seat: $seat, user: $user, date: $date) {
    ...userToSeatFields
  }
}

query FindUserToSeat($_id: ID!) {
  userToSeat: findUserToSeat(_id: $_id) {
    ...userToSeatFields
  }
}

mutation CreateUserToSeat($seat: ID!, $date: String!) {
  userToSeat: createUserToSeat(input: { seat: $seat, date: $date }) {
    ...userToSeatFields
  }
}

mutation DeleteUserToSeat($seat: ID!, $date: String!) {
  userToSeat: deleteUserToSeat(input: { seat: $seat, date: $date }) {
    ...userToSeatFields
  }
}

subscription UserToSeatCreated {
  userToSeat: userToSeatCreated {
    ...userToSeatFields
  }
}

subscription UserToSeatDeleted {
  userToSeat: userToSeatDeleted {
    ...userToSeatFields
  }
}
